{"./":{"url":"./","title":"Introduction","keywords":"","body":"Roadmap ğŸ—º Welcome! This is a project sharing different kinds of roadmaps. Come and join us! Here's roadmaps you can start with: Roles: Frontend - Become a frontend developer in web, app and desktop development Backend - Become a backend developer in distributed backend system Chip Design - A Easy way getting into digital intergated circuit design Skills: Flutter - A cross-platform framework developed by Google Go Rust How to edit Define your own roadmap first using roadmap code block which you can refer to the roadmap of Backend Internet: - How does the internet works?[URL=\"https://github.com\" fillcolor=\"lightpink\"] - What is HTTP?[tooltip=\"The basics of HTTP&HTTPS\"] - Browser and how they work? - DNS and how they work? - What is Domain Name? - What is hosting?[fillcolor=\"\"] Explain your roadmap and provide third-party resources. Serve Locally Install pacakges first: npm ci Serve the book locally to preview your contents: npx honkit serve "},"frontend/frontend.html":{"url":"frontend/frontend.html","title":"Frontend","keywords":"","body":"Frontend "},"programming/programming.html":{"url":"programming/programming.html","title":"Programming","keywords":"","body":"Programming "},"frontend/flutter.html":{"url":"frontend/flutter.html","title":"Flutter","keywords":"","body":"Flutter Requires that you have basics object-oriented programming (OOP) experience. Experience on developing native applications is not mandatory. G start --> end --> s2 --> e2 --> mn6 Backend mn6 --> end->mn6 mn0 Dart Basics start --> mn0->start sn3 mixins sn3 --> mn0:e->sn3:w sn4 await and async sn4 --> mn0:e->sn4:w sn5 null safety sn5 --> mn0:e->sn5:w sn0 Lists mn0 --> sn0:e->mn0:w sn1 Map mn0 --> sn1:e->mn0:w sn2 Lambda Function mn0 --> sn2:e->mn0:w mn1 Widgets mn0 --> mn1->mn0 sn8 Stack sn8 --> mn1:e->sn8:w sn9 Container sn9 --> mn1:e->sn9:w sn10 GestureDetector sn10 --> mn1:e->sn10:w sn6 Text mn1 --> sn6:e->mn1:w sn7 Row,Column mn1 --> sn7:e->mn1:w mn2 Navigation and Routing mn1 --> mn2->mn1 sn12 Router sn12 --> mn2:e->sn12:w sn11 Navigator mn2 --> sn11:e->mn2:w mn3 Packages mn2 --> mn3->mn2 sn15 Database sqflite sn15 --> mn3:e->sn15:w sn16 Config shared_prefernces sn16 --> mn3:e->sn16:w sn13 Network dio mn3 --> sn13:e->mn3:w sn14 JSON mn3 --> sn14:e->mn3:w mn4 Animation mn3 --> mn4->mn3 sn19 Implicit Animation sn19 --> mn4:e->sn19:w sn20 Hero Animation sn20 --> mn4:e->sn20:w sn21 Staggered Animation sn21 --> mn4:e->sn21:w sn17 AnimationBuilder mn4 --> sn17:e->mn4:w sn18 CustomPainter mn4 --> sn18:e->mn4:w mn5 Connect with Native mn4 --> mn5->mn4 sn25 Windows sn25 --> mn5:e->sn25:w sn26 MacOS sn26 --> mn5:e->sn26:w sn27 Linux sn27 --> mn5:e->sn27:w sn22 Platform Channel mn5 --> sn22:e->mn5:w sn23 iOS mn5 --> sn23:e->mn5:w sn24 Android mn5 --> sn24:e->mn5:w mn5 --> mn6->mn5 sn29 custom API sn29 --> mn6:e->sn29:w sn28 Firbase mn6 --> sn28:e->mn6:w "},"backend/kubernetes.html":{"url":"backend/kubernetes.html","title":"Kubernetes","keywords":"","body":"Kubernetes Learn how to manage a scalable application using kubernetes. G start --> end --> s2 --> e2 --> mn6 Service Mesh mn6 --> end->mn6 mn0 Language Basics start --> mn0->start sn1 YAML sn1 --> mn0:e->sn1:w sn0 Go mn0 --> sn0:e->mn0:w mn1 OS Basics mn0 --> mn1->mn0 sn4 Process & Affinity sn4 --> mn1:e->sn4:w sn5 Resources sn5 --> mn1:e->sn5:w sn6 Container sn6 --> mn1:e->sn6:w sn2 Storage mn1 --> sn2:e->mn1:w sn3 Network mn1 --> sn3:e->mn1:w mn2 Cluster Basics mn1 --> mn2->mn1 sn9 Network sn9 --> mn2:e->sn9:w sn10 Resources sn10 --> mn2:e->sn10:w sn7 Node mn2 --> sn7:e->mn2:w sn8 Scheduling mn2 --> sn8:e->mn2:w mn3 Kubernetes Concepts mn2 --> mn3->mn2 sn15 ConfigMap sn15 --> mn3:e->sn15:w sn16 Secret sn16 --> mn3:e->sn16:w sn17 StatefulSet sn17 --> mn3:e->sn17:w sn18 PV&PVC sn18 --> mn3:e->sn18:w sn19 Ingress sn19 --> mn3:e->sn19:w sn11 Node mn3 --> sn11:e->mn3:w sn12 Pod mn3 --> sn12:e->mn3:w sn13 Service mn3 --> sn13:e->mn3:w sn14 Deployment mn3 --> sn14:e->mn3:w mn4 Package & Operator mn3 --> mn4->mn3 sn21 CRD sn21 --> mn4:e->sn21:w sn22 Operator sn22 --> mn4:e->sn22:w sn20 Helm mn4 --> sn20:e->mn4:w mn5 Deep in Kubernetes mn4 --> mn5->mn4 sn26 Security sn26 --> mn5:e->sn26:w sn27 Permission sn27 --> mn5:e->sn27:w sn28 Plugin sn28 --> mn5:e->sn28:w sn23 Architecture mn5 --> sn23:e->mn5:w sn24 Networking mn5 --> sn24:e->mn5:w sn25 Storage mn5 --> sn25:e->mn5:w mn5 --> mn6->mn5 sn30 Knative sn30 --> mn6:e->sn30:w sn29 Istio mn6 --> sn29:e->mn6:w "},"chip/chip.html":{"url":"chip/chip.html","title":"Chip Design","keywords":"","body":"Chip Design Learn how to design a chip. G start --> end --> s2 --> e2 --> mn5 Impletation mn5 --> end->mn5 mn0 Basics of Digital Logic start --> mn0->start sn1 Latches and Registers sn1 --> mn0:e->sn1:w sn2 Clocks and STA sn2 --> mn0:e->sn2:w sn0 Logic Gates mn0 --> sn0:e->mn0:w mn1 Pick Up a Language mn0 --> mn1->mn0 sn4 VHDL sn4 --> mn1:e->sn4:w sn5 System Verilog sn5 --> mn1:e->sn5:w sn3 Verilog mn1 --> sn3:e->mn1:w mn2 Basics of Digital Design mn1 --> mn2->mn1 sn7 Memories sn7 --> mn2:e->sn7:w sn8 Async FIFO sn8 --> mn2:e->sn8:w sn6 Clock Domain mn2 --> sn6:e->mn2:w mn3 Verification mn2 --> mn3->mn2 sn11 Formal sn11 --> mn3:e->sn11:w sn12 DFT sn12 --> mn3:e->sn12:w sn9 UVM mn3 --> sn9:e->mn3:w sn10 Coverage mn3 --> sn10:e->mn3:w mn4 Synthesize mn3 --> mn4->mn3 sn15 Routing sn15 --> mn4:e->sn15:w sn16 ECO sn16 --> mn4:e->sn16:w sn13 Mapping mn4 --> sn13:e->mn4:w sn14 Placing mn4 --> sn14:e->mn4:w mn4 --> mn5->mn4 sn19 I/O sn19 --> mn5:e->sn19:w sn20 Clock Tree sn20 --> mn5:e->sn20:w sn21 Interconnection sn21 --> mn5:e->sn21:w sn17 Device Library mn5 --> sn17:e->mn5:w sn18 Layout mn5 --> sn18:e->mn5:w "},"programming/go.html":{"url":"programming/go.html","title":"Go","keywords":"","body":"Go G start --> end --> s2 --> e2 --> mn8 Performance mn8 --> end->mn8 mn0 Go Basics start --> mn0->start sn3 Data Types sn3 --> mn0:e->sn3:w sn4 Array, Slice, Map sn4 --> mn0:e->sn4:w sn5 Struct sn5 --> mn0:e->sn5:w sn6 Error, Panic, Recover sn6 --> mn0:e->sn6:w sn0 Variable mn0 --> sn0:e->mn0:w sn1 Control Structure mn0 --> sn1:e->mn0:w sn2 Function mn0 --> sn2:e->mn0:w mn1 Practical Go mn0 --> mn1->mn0 sn12 ORM sn12 --> mn1:e->sn12:w sn13 Timer sn13 --> mn1:e->sn13:w sn14 iota sn14 --> mn1:e->sn14:w sn15 defer sn15 --> mn1:e->sn15:w sn16 range sn16 --> mn1:e->sn16:w sn7 Module mn1 --> sn7:e->mn1:w sn8 JSON mn1 --> sn8:e->mn1:w sn9 Interface mn1 --> sn9:e->mn1:w sn10 Buffer mn1 --> sn10:e->mn1:w sn11 Select mn1 --> sn11:e->mn1:w mn2 Concurrency mn1 --> mn2->mn1 sn19 Mutex & RWMutex sn19 --> mn2:e->sn19:w sn20 WaitGroup sn20 --> mn2:e->sn20:w sn21 Context sn21 --> mn2:e->sn21:w sn17 Goroutine mn2 --> sn17:e->mn2:w sn18 Channel mn2 --> sn18:e->mn2:w mn3 Frameworks mn2 --> mn3->mn2 sn23 WebSocket Gorilla sn23 --> mn3:e->sn23:w sn22 Web Gin mn3 --> sn22:e->mn3:w mn4 Testing mn3 --> mn4->mn3 sn25 benchmark sn25 --> mn4:e->sn25:w sn24 test mn4 --> sn24:e->mn4:w mn5 Protocols mn4 --> mn5->mn4 sn27 RPC sn27 --> mn5:e->sn27:w sn28 RESTful sn28 --> mn5:e->sn28:w sn26 HTTP mn5 --> sn26:e->mn5:w mn6 Deep Unstanding mn5 --> mn6->mn5 sn31 Go Runtime sn31 --> mn6:e->sn31:w sn32 Implemetation sn32 --> mn6:e->sn32:w sn29 Garbage Collection mn6 --> sn29:e->mn6:w sn30 Memory Allocation mn6 --> sn30:e->mn6:w mn7 Debug mn6 --> mn7->mn6 sn34 Deadlock sn34 --> mn7:e->sn34:w sn33 Leak mn7 --> sn33:e->mn7:w mn7 --> mn8->mn7 sn37 sync.Pool sn37 --> mn8:e->sn37:w sn38 Lock sn38 --> mn8:e->sn38:w sn39 string sn39 --> mn8:e->sn39:w sn35 profile mn8 --> sn35:e->mn8:w sn36 Escape Analysis mn8 --> sn36:e->mn8:w "},"programming/rust.html":{"url":"programming/rust.html","title":"Rust","keywords":"","body":"Rust We assume that you have the knowledge of pointers and memory management, generics programming and basic data structures. G start --> end --> s2 --> e2 --> mn8 Advanced Features mn8 --> end->mn8 mn0 Hello World! start --> mn0->start sn1 Cargo sn1 --> mn0:e->sn1:w sn0 Installation mn0 --> sn0:e->mn0:w mn1 Common Concepts mn0 --> mn1->mn0 sn5 Control Flow sn5 --> mn1:e->sn5:w sn6 Structs sn6 --> mn1:e->sn6:w sn7 Enums sn7 --> mn1:e->sn7:w sn2 Variables and Mutability mn1 --> sn2:e->mn1:w sn3 Data Types mn1 --> sn3:e->mn1:w sn4 Functions mn1 --> sn4:e->mn1:w mn2 Ownership mn1 --> mn2->mn1 sn9 References and Borrowing sn9 --> mn2:e->sn9:w sn10 Slice sn10 --> mn2:e->sn10:w sn8 Memory Allocation mn2 --> sn8:e->mn2:w mn3 Generic mn2 --> mn3->mn2 sn12 Traits sn12 --> mn3:e->sn12:w sn13 Lifetime sn13 --> mn3:e->sn13:w sn11 Generic Data Types mn3 --> sn11:e->mn3:w mn4 Project mn3 --> mn4->mn3 sn16 Testing sn16 --> mn4:e->sn16:w sn17 Error sn17 --> mn4:e->sn17:w sn14 Package and Crates mn4 --> sn14:e->mn4:w sn15 Modules mn4 --> sn15:e->mn4:w mn5 Functional Language mn4 --> mn5->mn4 sn19 Iterators sn19 --> mn5:e->sn19:w sn18 Closures mn5 --> sn18:e->mn5:w mn6 Smart Pointers mn5 --> mn6->mn5 sn22 \"> RefCell sn22 --> mn6:e->sn22:w sn23 \"> Arc sn23 --> mn6:e->sn23:w sn20 \"> Box mn6 --> sn20:e->mn6:w sn21 \"> Rc mn6 --> sn21:e->mn6:w mn7 Concurrency mn6 --> mn7->mn6 sn26 Shared State sn26 --> mn7:e->sn26:w sn27 Sync & Send sn27 --> mn7:e->sn27:w sn24 Threads mn7 --> sn24:e->mn7:w sn25 Message Passing mn7 --> sn25:e->mn7:w mn7 --> mn8->mn7 sn30 Types sn30 --> mn8:e->sn30:w sn31 Functions and Closures sn31 --> mn8:e->sn31:w sn32 Macros sn32 --> mn8:e->sn32:w sn28 Unsafe mn8 --> sn28:e->mn8:w sn29 Traits mn8 --> sn29:e->mn8:w The Rust Programming Language Learning Rust With Entirely Too Many Lists The Rustconomicon - The Dark Arts of Unsafe Rust "},"backend/backend.html":{"url":"backend/backend.html","title":"Backend","keywords":"","body":"Backend Developer Step by step guide to becomming an Backend Developer. We assume that you've already have some basics knowledge on how to use computer. G start --> end --> s2 --> e2 --> mn13 Scalable Application mn13 --> end->mn13 mn0 Internet Basics start --> mn0->start sn2 HTTP Request sn2 --> mn0:e->sn2:w sn3 API Basics sn3 --> mn0:e->sn3:w sn0 Server-Client Basics mn0 --> sn0:e->mn0:w sn1 Network Model mn0 --> sn1:e->mn0:w mn1 Linux Basics mn0 --> mn1->mn0 sn6 File System sn6 --> mn1:e->sn6:w sn7 Permissions sn7 --> mn1:e->sn7:w sn4 Terminal Usage mn1 --> sn4:e->mn1:w sn5 Commands mn1 --> sn5:e->mn1:w mn2 Programming Language mn1 --> mn2->mn1 sn11 JavaScript sn11 --> mn2:e->sn11:w sn12 Rust sn12 --> mn2:e->sn12:w sn13 C++ sn13 --> mn2:e->sn13:w sn8 Go mn2 --> sn8:e->mn2:w sn9 Java mn2 --> sn9:e->mn2:w sn10 Python mn2 --> sn10:e->mn2:w mn3 Hosting mn2 --> mn3->mn2 sn16 Domain Name sn16 --> mn3:e->sn16:w sn17 DNS Records sn17 --> mn3:e->sn17:w sn14 Web Server mn3 --> sn14:e->mn3:w sn15 Cloud Provider mn3 --> sn15:e->mn3:w mn4 Version Control & Code Base mn3 --> mn4->mn3 sn19 Github sn19 --> mn4:e->sn19:w sn20 GitLab sn20 --> mn4:e->sn20:w sn18 Git mn4 --> sn18:e->mn4:w mn5 Container & Virtualization mn4 --> mn5->mn4 sn22 Linux Container sn22 --> mn5:e->sn22:w sn23 Docker & DockerHub sn23 --> mn5:e->sn23:w sn21 Virtual Machine mn5 --> sn21:e->mn5:w mn6 Testing mn5 --> mn6->mn5 sn25 Integration Test sn25 --> mn6:e->sn25:w sn26 System Test sn26 --> mn6:e->sn26:w sn24 Unit Test mn6 --> sn24:e->mn6:w mn7 CI/CD mn6 --> mn7->mn6 sn28 Jekins sn28 --> mn7:e->sn28:w sn27 Github Actions mn7 --> sn27:e->mn7:w mn8 Relational Database mn7 --> mn8->mn7 sn30 MySQL sn30 --> mn8:e->sn30:w sn29 PostgreSQL mn8 --> sn29:e->mn8:w mn9 NoSQL Database mn8 --> mn9->mn8 sn33 Key-Value Redis,etcd sn33 --> mn9:e->sn33:w sn34 Search Elastic Search sn34 --> mn9:e->sn34:w sn31 Document MongoDB mn9 --> sn31:e->mn9:w sn32 Column Cassandra mn9 --> sn32:e->mn9:w mn10 Message Broker mn9 --> mn10->mn9 sn36 RocketMQ sn36 --> mn10:e->sn36:w sn37 RabbitMQ sn37 --> mn10:e->sn37:w sn35 Kafka mn10 --> sn35:e->mn10:w mn11 Cache mn10 --> mn11->mn10 sn39 Server Redis sn39 --> mn11:e->sn39:w sn40 Client sn40 --> mn11:e->sn40:w sn38 CDN mn11 --> sn38:e->mn11:w mn12 Security mn11 --> mn12->mn11 sn42 Rate Limiting sn42 --> mn12:e->sn42:w sn43 Data Injection sn43 --> mn12:e->sn43:w sn41 Authentication mn12 --> sn41:e->mn12:w mn12 --> mn13->mn12 sn47 Replication sn47 --> mn13:e->sn47:w sn48 Auto Scaling sn48 --> mn13:e->sn48:w sn49 Monitoring sn49 --> mn13:e->sn49:w sn44 Cluster & Kubernetes mn13 --> sn44:e->mn13:w sn45 Load Balancing mn13 --> sn45:e->mn13:w sn46 Segmentation mn13 --> sn46:e->mn13:w Internet Basics Basic knowledge of how does Internet works. G start --> end --> s2 --> e2 --> mn0 Internet Basics mn0 --> end->mn0 start --> mn0->start sn2 HTTP Request sn2 --> mn0:e->sn2:w sn3 API Basics sn3 --> mn0:e->sn3:w sn0 Server-Client Basics mn0 --> sn0:e->mn0:w sn1 Network Model mn0 --> sn1:e->mn0:w Linux Basics G start --> end --> s2 --> e2 --> mn0 Linux Basics mn0 --> end->mn0 start --> mn0->start sn2 File System sn2 --> mn0:e->sn2:w sn3 Permissions sn3 --> mn0:e->sn3:w sn0 Terminal Usage mn0 --> sn0:e->mn0:w sn1 Commands mn0 --> sn1:e->mn0:w Programming Language Pick a programming language depending on your requirements. Python: Popular script language. Easy to learn. DO NOT require high performance. Go: Popular for backend development. Easy grammar. Java: Widely used language with abundant libraries and frameworks. JavaScript: Pick me if you're a full stack developer using node. Rust: Designed for high performance applications. Hard to learn but really safe. C++: Old language provides high performance. Be care about pointers. Better use Rust. G start --> end --> s2 --> e2 --> mn0 Programming Language mn0 --> end->mn0 start --> mn0->start sn3 JavaScript sn3 --> mn0:e->sn3:w sn4 Rust sn4 --> mn0:e->sn4:w sn5 C++ sn5 --> mn0:e->sn5:w sn0 Go mn0 --> sn0:e->mn0:w sn1 Java mn0 --> sn1:e->mn0:w sn2 Python mn0 --> sn2:e->mn0:w Hosting Hosting a web service on the cloud. G start --> end --> s2 --> e2 --> mn0 Hosting mn0 --> end->mn0 start --> mn0->start sn2 Domain Name sn2 --> mn0:e->sn2:w sn3 DNS Records sn3 --> mn0:e->sn3:w sn0 Web Server mn0 --> sn0:e->mn0:w sn1 Cloud Provider mn0 --> sn1:e->mn0:w Version Control & Code Base G start --> end --> s2 --> e2 --> mn0 Version Control & Code Base mn0 --> end->mn0 start --> mn0->start sn1 Github sn1 --> mn0:e->sn1:w sn2 GitLab sn2 --> mn0:e->sn2:w sn0 Git mn0 --> sn0:e->mn0:w Container & Virtualization G start --> end --> s2 --> e2 --> mn0 Container & Virtualization mn0 --> end->mn0 start --> mn0->start sn1 Linux Container sn1 --> mn0:e->sn1:w sn2 Docker & DockerHub sn2 --> mn0:e->sn2:w sn0 Virtual Machine mn0 --> sn0:e->mn0:w Testing G start --> end --> s2 --> e2 --> mn0 Testing mn0 --> end->mn0 start --> mn0->start sn1 Integration Test sn1 --> mn0:e->sn1:w sn2 System Test sn2 --> mn0:e->sn2:w sn0 Unit Test mn0 --> sn0:e->mn0:w CI/CD G start --> end --> s2 --> e2 --> mn0 CI/CD mn0 --> end->mn0 start --> mn0->start sn1 Jekins sn1 --> mn0:e->sn1:w sn0 Github Actions mn0 --> sn0:e->mn0:w Relational Database G start --> end --> s2 --> e2 --> mn0 Relational Database mn0 --> end->mn0 start --> mn0->start sn1 MySQL sn1 --> mn0:e->sn1:w sn0 PostgreSQL mn0 --> sn0:e->mn0:w NoSQL Database G start --> end --> s2 --> e2 --> mn0 NoSQL Database mn0 --> end->mn0 start --> mn0->start sn2 Key-Value Redis,etcd sn2 --> mn0:e->sn2:w sn3 Search Elastic Search sn3 --> mn0:e->sn3:w sn0 Document MongoDB mn0 --> sn0:e->mn0:w sn1 Column Cassandra mn0 --> sn1:e->mn0:w Message Broker G start --> end --> s2 --> e2 --> mn0 Message Broker mn0 --> end->mn0 start --> mn0->start sn1 RocketMQ sn1 --> mn0:e->sn1:w sn2 RabbitMQ sn2 --> mn0:e->sn2:w sn0 Kafka mn0 --> sn0:e->mn0:w Security G start --> end --> s2 --> e2 --> mn0 Security mn0 --> end->mn0 start --> mn0->start sn1 Rate Limiting sn1 --> mn0:e->sn1:w sn2 Data Injection sn2 --> mn0:e->sn2:w sn0 Authentication mn0 --> sn0:e->mn0:w Scalable Application G start --> end --> s2 --> e2 --> mn0 Scalable Application mn0 --> end->mn0 start --> mn0->start sn3 Replication sn3 --> mn0:e->sn3:w sn4 Auto Scaling sn4 --> mn0:e->sn4:w sn5 Monitoring sn5 --> mn0:e->sn5:w sn0 Cluster & Kubernetes mn0 --> sn0:e->mn0:w sn1 Load Balancing mn0 --> sn1:e->mn0:w sn2 Segmentation mn0 --> sn2:e->mn0:w "}}